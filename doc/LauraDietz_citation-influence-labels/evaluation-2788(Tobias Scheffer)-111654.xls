Evaluation sheet		v0.1		
		Abstract	Authors	Title
citingPub	111654	` subsumption is a decidable but incomplete approximation of logic implication, important to inductive logic programming and theorem proving. We show that by context based elimination of  possible matches a certain superset of the determinate clauses can be tested for subsumption in  polynomial time. We discuss the relation between subsumption and the clique problem, showing in  particular that using additional prior knowledge about the substitution space only a small fraction  of the search space can be identified as possibly containing globally consistent solutions, which  leads to an effective pruning rule. We present empirical results, demonstrating that a combination  of both of the above approaches provides an extreme reduction of computational effort.  1. Introduction  `-subsumption (Robinson, 1965) is a correct but incomplete,e.g., decidable consequence relation,  while implication is undecidable in general. A clause C `-subsumes D (C ` ` D), iff there is a  substitution `, such that C`...	Fritz Wysotzki, Ralf Herbrich, Tobias Scheffer	Efficient Algorithms for theta-Subsumption
evalAuthor	2788		Tobias Scheffer	

Evaluation Legend				
xx	strongly influenced			
x	influenced			
o	not really influenced			
oo	unrelated			
?	can't judge			

Evaluation				
======	id	Abstract	Authors	Title
oo	137427	Finite element methods are used extensively by engineers and modelling scientists to analyse stresses in physical structures. These structures are represented quantitatively as finite collections of elements. The deformation of each element is computed using linear algebraic equations. In order to design a numerical model of a physical structure it is necessary to decide the appropriate resolution for modelling each component part. Considerable expertise is required in choosing these resolution values. Too fine a mesh leads to unnecessary computational overheads when executing the model. Too coarse a mesh produces intolerable approximation errors. In this paper we demonstrate that rules for deciding on appropriate resolution values can be inductively constructed from expert-provided examples. The Inductive Logic Programming algorithm Golem is employed for this purpose. Cross-validation testing of rules produced by Golem in this domain indicate an acuracy of around 79% correct on unseen...<	Bojan Dolsak, S. H. Muggleton	The Application of Inductive Logic Programming to Finite Element Mesh Design
oo	16972	The field of Inductive Logic Programming (ILP) is concerned with inducing logic programs  from examples in the presence of background  knowledge. This paper defines the ILP  problem, and describes the various syntactic  restrictions that are commonly used for learning  first-order representations. We then derive  some positive results concerning the learnability  of these restricted classes of logic programs,  by reducing the ILP problem to a standard  propositional learning problem. More specifically,  k-clause predicate definitions consisting  of determinate, function-free, non-recursive  Horn clauses with variables of bounded depth  are polynomially learnable under a broad class  of probability distributions, called simple distributions.  Similarly, recursive k-clause definitions  are polynomially learnable under simple  distributions if we allow existential and membership  queries about the target concept.  1 Introduction  Most successes within the field of machine learning have  derived from system...	Saso Dzeroski, S. H. Muggleton, Stuart Russell	PAC-Learnability of Determinate Logic Programs
oo	417723	In this paper, we describe two different learning tasks for relational structures. When  learning a classifier for structures, the relational  structures in the training sets are classified  as a whole. Contrarily, when learning  a context dependent classifier for elementary  objects, the elementary objects of the relational  structures in the training set are classified.  In general, the class of an elementary  object will not only depend on its elementary  properties, but also on its context, which has  to be learned, too. We investigate the question  how such classifications can be induced  automatically from a given training set containing  classified structures or classified elementary  objects respectively. We present a  graph theoretic algorithm that allows the description  of the objects in the training set by  automatically constructed attributes. This  allows us to employ well-known methods of  decision tree induction to construct a hypothesis.  We present the system INDIGO ...	Fritz Wysotzki, Peter Geibel	Learning Relational Concepts with Decision Trees
oo	41475	"All generalisations within logic involve inverting implication. Yet, ever since Plotkin's work in the early 1970's methods of generalising first-order  clauses have involved inverting the clausal subsumption relationship. However,  even Plotkin realised that this approach was incomplete. Since inversion  of subsumption is central to many Inductive Logic Programming  approaches, this form of incompleteness has been propagated to techniques  such as Inverse Resolution and Relative Least General Generalisation. A  more complete approach to inverting implication has been attempted with  some success recently by Lapointe and Matwin. In the present paper the  author derives general solutions to this problem from first principles. It  is shown that clausal subsumption is only incomplete for self-recursive  clauses. Avoiding this incompleteness involves algorithms which find ""nth  roots"" of clauses. Completeness and correctness results are proved for a  non-deterministic algorithms which constructs nth ro..."	S. H. Muggleton	Inverting Implication
x	94985	"Recently there has been increasing interest in systems which induce first order logic programs from examples. However, many difficulties need to be overcome. Well-known algorithms fail to discover correct logical descriptions for large classes of interesting predicates, due either to the intractability of search or overly strong limitations applied to the hypothesis space. In contrast, search is avoided within Plotkin's framework of relative least general generalisation (rlgg). It is replaced by the process of constructing a unique clause which covers a set of examples relative to given background knowledge. However, such a clause can in the worst case contain infinitely many literals, or at best grow exponentially with the number of examples involved. In this paper we introduce the concept of h-easy rlgg clauses and show that they have finite length. We also prove that the length of a certain class of ""determinate"" rlgg is bounded by a polynomial function of certain features of the ba...<"	Shaw C. Feng, S. H. Muggleton	Efficient Induction Of Logic Programs
xx	214443	. The `-subsumption problem is crucial to the efficiency of ILP learning systems. We discuss two `-subsumption algorithms based on  strategies for preselecting suitable matching literals. The class of clauses,  for which subsumption becomes polynomial, is a superset of the deterministic  clauses. We further map the general problem of `-subsumption  to a certain problem of finding a clique of fixed size in a graph, and  in return show that a specialization of the pruning strategy of the Carraghan  and Pardalos clique algorithm provides a dramatic reduction of  the subsumption search space. We also present empirical results for the  mesh design data set.  1 Introduction  `-subsumption [Rob65] is a correct but incomplete, decidable consequence relation,  while implication is undecidable in general. A clause C `-subsumes D  (C ` ` D), iff there is a substitution `, such that C` ` D.  `-subsumption is used as a consequence relation in many ILP systems, for  the decision if a rule covers an example as ...	Fritz Wysotzki, Ralf Herbrich, Tobias Scheffer	Efficient theta-Subsumption based on Graph Algorithms
======				
