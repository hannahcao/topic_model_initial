Evaluation sheet		v0.1		
		Abstract	Authors	Title
citingPub	372706	The extreme Programming methodology (XP) relies on co-located collaboration of programming  teams. This paper discusses problems and possible  solutions when distributed teams decide to do XP.  Communication and awareness support are the  keys to the successful distribution of programming  teams. The XP methodology is analysed  with respect to these essential issues. We present  TUKAN, which is a synchronous distributed team  programming environment, which applies groupware  research results to the XP domain and solves  the problems which arise when XP is carried out  by distributed teams.  Keywords  eXtreme Programming, CSCW, groupware, distribution,  awareness, communication, coordination,  TUKAN  1 Introduction  The eXtreme Programming (XP) methodology [1]  heavily relies on group members being co-located.  Rich communications within the team and a high  degree of awareness of the actions, which are performed  by others, are essential aspects of XP.  Unfortunately, co-located collaboration is not po...	Jan Schmmer, Till Schmmer	Support for Distributed Teams in eXtreme Programming
evalAuthor	42053		Till Schmmer	

Evaluation Legend				
xx	strongly influenced			
x	influenced			
o	not really influenced			
oo	unrelated			
?	can't judge			

Evaluation				
======	id	Abstract	Authors	Title
x	124643	this paper, we motivate, describe, and illustrate the main components of FLECSE, thereby providing an initial answer  to the following fundamental question: In what ways must a traditional software engineering environment be  extended to allow software engineering tasks to be carried out more concurrently?  A definitive answer to this question requires several iterations of (i) identifying concurrent software  engineering scenarios, (ii) developing an environment that supports these scenarios, (iii) experimenting with the  environment in controlled settings, and (iv) testing the environment in the field. We have carried out mainly steps  (i) and (ii) of a preliminary iteration of this process, so our answers to this question are not yet ideal. However,  we believe our work is a necessary and important step towards practical environments for supporting concurrent  software engineering.  In the remaining discussion we will examine five important themes of concurrent software engineering:		Towards Computer-Supported Concurrent Software Engineering
x	80597	": Systems coordinating distributed collaborative work must manage user data distributed over a network. The strong consistency algorithms which designers have typically  borrowed from the distributed systems community are often unsuited to the particular needs  of CSCW. Here, I outline an alternative approach based on divergence and synchronisation  between parallel streams of activity. From a CSCW perspective, this strategy offers three  primary advantages. First, it is scalable, allowing smooth transitions from highly interactive  collaboration to more extended, ""asynchronous"" styles of work. Second, it supports ""multisynchronous  "" work, in which parties work independently in parallel. Third, it directly supports  observed patterns of opportunistic activities in collaborative working.  Introduction: Distributed Data Management  Collaborative applications coordinate activities which may be distributed in time  and/or space. Distribution in time means that activities may take place at differen..."	Paul Dourish	The Parting of the Ways: Divergence, Data Management and Collaborative Work
x	10883	Awareness of individual and group activities is critical to successful collaboration and is commonly supported in CSCW systems by active, information generation mechanisms separate from the shared workspace. These mechanisms penalise information providers, presuppose relevance to the recipient, and make access difficult. We discuss a study of shared editor use which suggests that awareness information provided and exploited passively through the shared workspace, allows users to move smoothly between close and loose collaboration, and to assign and coordinate work dynamically. Passive awareness mechanisms promise effective support for collaboration requiring this sort of behaviour, whilst avoiding problems with active approaches. KEYWORDS: Awareness, information sharing, coordination, shared workspaces, shared feedback. 1 INTRODUCTION Studies of collaborative writing [e.g. 2, 7, 16] highlight the extent to which information sharing, knowledge of group and individual activity, and coor...<	Cambridge Europarc, Paul Dourish, V. Bellotti	Awareness and Coordination in Shared Work Spaces
xx	433211	Shared physical workspaces allow people to maintain upto -the minute knowledge about others' interaction with the  workspace. This knowledge is workspace awareness, part  of the glue that allows groups to collaborate effectively. In  this paper, we present the concept of workspace awareness  as a key for groupware systems that wish to support the  fluid interaction evident in face-to-face collaboration. We  discuss why workspace awareness is difficult to support in  groupware systems, and then present a conceptual  framework that groupware designers can use as a starting  point for thinking about and supporting awareness.  KEYWORDS: Workspace awareness, groupware, CSCW  INTRODUCTION  Shared physical workspaces (such as a chalkboard, a  control panel, or a tabletop) and the artifacts in them act as  stage and props for rich person-to-person interaction (e.g.  [1]). The affordances of physical workspaces allow people  to maintain awareness of others' locations, activities, and  intentions relative to ...	Carl Gutwin, Saul Greenberg	Workspace Awareness for Groupware
x	247993	"Workspace awareness is knowledge about others' interaction with a shared workspace. Groupware systems  provide only limited information about other participants,  often compromising workspace awareness. This paper  describes a usability study of several widgets designed to  help maintain awareness in a groupware workspace. These  widgets include a miniature view, a radar view, a multiuser  scrollbar, a glance function, and a ""what you see is  what I do"" view. The study examined the widgets'  information content, how easily people could interpret  them, and whether they were useful or distracting.  Observations, questionnaires, and interviews indicate that  the miniature and radar displays are useful and valuable for  tasks involving spatial manipulation of artifacts.  Keywords  Workspace awareness, shared workspaces, usability study.  INTRODUCTION  People maintain an ongoing awareness of others in physical  workspaces like whiteboards and tabletops, and they do this  using everyday perceptual abilit..."	Carl Gutwin, Mark Roseman, Saul Greenberg	A Usability Study of Awareness Widgets in a Shared Workspace Groupware System
x	195548	This paper introduces COAST, an object-oriented toolkit for the development of synchronous groupware,  which enhances the usability and simplifies the  development of such applications. COAST offers basic  and generic components for the design of synchronous  groupware and is complemented by a methodology for  groupware development. Basic features of the toolkit  include transaction-controlled access to replicated  shared objects, transparent replication management,  and a fully optimistic concurrency control.  Development support is provided by a session concept  supporting the flexible coupling of shared objects'  aspects between concurrent users and by a fully  transparent updating concept for displays which is  based on declarative programming.  KEYWORDS: toolkit, synchronous collaboration,  groupware, replicated objects, sessions, display  updating, concurrency control  1 INTRODUCTION  Groupware allows several geographically distributed  people to work together with the aid of a computerized  envi...	Christian Schuckmann, Jorg M. Haake, Lutz Kirchner, Christian Schuckmann, Jorg M. Haake, Lutz Kirchner	Designing object-oriented synchronous groupware with COAST
======				
